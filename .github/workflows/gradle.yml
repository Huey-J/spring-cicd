# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

# Repo Actions 페이지에 나타날 이름 (묶음)
name: Java CI with Gradle

# Event Trigger
# Master에 push, pull_request 될 경우 동작
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    # 실행 환경 OS 지정
    runs-on: ubuntu-latest

    # Task의 sequence를 명시
    # Name은 Task의 이름, run은 실행될 코드
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

    # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/

    # appspec.yml Copy
    - name: Copy appspec
      run: cp appspec.yml ./deploy/

    # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./springboot-build.zip ./deploy

    # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # IAM key
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # IAM key
      # s3://{전달할 S3 Bucket 이름}/
      run: |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \
        ./springboot-build.zip s3://bucket.h/

    # deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws deploy create-deployment \
        --application-name codedeploy-h \           # CodeDeploy 어플리케이션 이름
        --deployment-group-name group \             # CodeDeploy 배포 그룹 이름
        --file-exists-behavior OVERWRITE \          # 이미 파일이 있으면 덮어쓰기
        --s3-location bucket=bucket.h,bundleType=zip,key=springboot-build.zip \        # S3 버킷 이름, 업로드한 zip파일 이름
        --region ap-northeast-2
